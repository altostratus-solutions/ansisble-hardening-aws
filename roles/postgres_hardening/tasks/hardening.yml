---
- name: Fetch OS dependent variables
  ansible.builtin.include_vars:
    file: "{{ item }}"
    name: os_vars
  with_first_found:
    - files:
        - "{{ ansible_facts.distribution }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "{{ ansible_facts.distribution }}.yml"
        - "{{ ansible_facts.os_family }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "{{ ansible_facts.os_family }}.yml"
      skip: true
  tags: always

# we only override variables with our default if they have not been specified already.
# by default the lookup functions finds all varnames containing the string, therefore
# we add ^ and $ to denote start and end of string, so this returns only exact matches.
- name: Set OS dependent variables, if not already defined by user # noqa var-naming
  ansible.builtin.set_fact:
    "{{ item.key }}": "{{ item.value }}"
  when: not lookup('varnames', '^' + item.key + '$')
  with_dict: "{{ os_vars }}"
  tags: always

#################################
# Check Compatibility ###########
#################################
- name: Print the OS
  ansible.builtin.debug:
    var: ansible_facts.os_family

- name: Only compatible OS versions
  ansible.builtin.fail:
    msg: "Only Ubuntu/Debian are supported"
  when: ansible_facts.os_family not in ["Ubuntu", "Debian"]

#################################
# POSTGRES-01 ###################
#################################
- name: Check postgres service status
  ansible.builtin.service:
    name: "{{ postgres_daemon }}"
    state: started

#################################
# POSTGRES-02 ###################
#################################
- name: Get postgres version
  ansible.builtin.command: psql -V
  register: postgres_version_raw
  changed_when: false
  check_mode: false

- name: Print the postgres version
  ansible.builtin.debug:
    var: postgres_version_raw

- name: Parse postgres-version
  ansible.builtin.set_fact:
    postgres_version: "{{ postgres_version_raw.stdout | regex_search('psql\\s\\(PostgreSQL\\)\\s(12|13|14|15|16).*', '\\1') | first }}"

- name: Print the postgres version
  ansible.builtin.debug:
    var: postgres_version

- name: Only compatible postgres versions allowed
  ansible.builtin.fail:
    msg: "Postgres Version is not secure or supported!"
  when: not postgres_version or 'RC' in postgres_version_raw or 'DEVEL' in postgres_version_raw or 'BETA' in postgres_version_raw


#################################
# POSTGRES-10 ###################
#################################
- name: Manage permissions on /etc/postgresql/14/main
  ansible.builtin.file:
    path: /etc/postgresql/14/main
    state: directory
    owner: postgres
    group: postgres
    mode: u=rwx,g=,o=

- name: Manage permissions on /etc/postgresql/14/main/postgresql.conf
  ansible.builtin.file:
    path: /etc/postgresql/14/main/postgresql.conf
    state: file
    owner: postgres
    group: postgres
    mode: u=rw,g=r,o=

- name: Manage permissions on /etc/postgresql/14/main/pg_hba.conf
  ansible.builtin.file:
    path: /etc/postgresql/14/main/pg_hba.conf
    state: file
    owner: postgres
    group: postgres
    mode: u=rw,g=,o=
